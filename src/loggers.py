import logging

logging.basicConfig(
    filename="A_Song_of_Ice_and_Fire.txt",
    format="%(asctime)s %(name)s => %(message)s",
    level=logging.DEBUG
)


class CombatFilter(logging.Filter):
    """
    Filters out combat records, if the combat resulted in a tie
    """
    def filter(self, record) -> bool:
        # Какой-то грязный хак, но не успеваю разобраться
        # как сюда нормально прокинуть winner
        return "0" not in record.msg


# The root_logger
# The Liege Lord of all the other loggers =D
liege_logger = logging.getLogger("")

# Warnings and errors are redirected to console
console = logging.StreamHandler()
console.setLevel(logging.WARNING)
liege_logger.addHandler(console)

# Separate combat_logger redirects combat logs in A_Clash_of_Kings.txt
combat_logger = logging.getLogger("combat chronicler")
combat_file_handler = logging.FileHandler("A_Clash_of_Kings.txt")
combat_logger.addHandler(combat_file_handler)
# No one cares about combats ended with a tie
combat_logger.addFilter(CombatFilter())

# Separate vassal_logger redirects the logs generated by the actions of mere users to A_Feast_for_Crows.txt
vassal_logger = logging.getLogger("Sam Tarly")
vassal_file_handler = logging.FileHandler("A_Feast_for_Crows.txt")
vassal_logger.addHandler(vassal_file_handler)
